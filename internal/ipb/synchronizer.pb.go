// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.24.0
// source: internal/api/synchronizer.proto

package ipb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	pb "open-match.dev/open-match/pkg/pb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SynchronizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A match returned by an mmf.
	Proposal      *pb.Match `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynchronizeRequest) Reset() {
	*x = SynchronizeRequest{}
	mi := &file_internal_api_synchronizer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynchronizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeRequest) ProtoMessage() {}

func (x *SynchronizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_synchronizer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeRequest.ProtoReflect.Descriptor instead.
func (*SynchronizeRequest) Descriptor() ([]byte, []int) {
	return file_internal_api_synchronizer_proto_rawDescGZIP(), []int{0}
}

func (x *SynchronizeRequest) GetProposal() *pb.Match {
	if x != nil {
		return x.Proposal
	}
	return nil
}

type SynchronizeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Instructs the backend call that it can start running the mmfs.
	StartMmfs bool `protobuf:"varint,1,opt,name=start_mmfs,json=startMmfs,proto3" json:"start_mmfs,omitempty"`
	// Instructs the backend call that it should cancel any RPC calls to the mmfs,
	// not send any more matches, and close the send stream.
	CancelMmfs bool `protobuf:"varint,2,opt,name=cancel_mmfs,json=cancelMmfs,proto3" json:"cancel_mmfs,omitempty"`
	// A match ID returned by the evaluator and should be returned to the FetchMatches
	// caller.
	MatchId       string `protobuf:"bytes,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynchronizeResponse) Reset() {
	*x = SynchronizeResponse{}
	mi := &file_internal_api_synchronizer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynchronizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynchronizeResponse) ProtoMessage() {}

func (x *SynchronizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_api_synchronizer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynchronizeResponse.ProtoReflect.Descriptor instead.
func (*SynchronizeResponse) Descriptor() ([]byte, []int) {
	return file_internal_api_synchronizer_proto_rawDescGZIP(), []int{1}
}

func (x *SynchronizeResponse) GetStartMmfs() bool {
	if x != nil {
		return x.StartMmfs
	}
	return false
}

func (x *SynchronizeResponse) GetCancelMmfs() bool {
	if x != nil {
		return x.CancelMmfs
	}
	return false
}

func (x *SynchronizeResponse) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

var File_internal_api_synchronizer_proto protoreflect.FileDescriptor

const file_internal_api_synchronizer_proto_rawDesc = "" +
	"\n" +
	"\x1finternal/api/synchronizer.proto\x12\x12openmatch.internal\x1a\x12api/messages.proto\"B\n" +
	"\x12SynchronizeRequest\x12,\n" +
	"\bproposal\x18\x01 \x01(\v2\x10.openmatch.MatchR\bproposal\"v\n" +
	"\x13SynchronizeResponse\x12\x1d\n" +
	"\n" +
	"start_mmfs\x18\x01 \x01(\bR\tstartMmfs\x12\x1f\n" +
	"\vcancel_mmfs\x18\x02 \x01(\bR\n" +
	"cancelMmfs\x12\x19\n" +
	"\bmatch_id\x18\x04 \x01(\tR\amatchIdJ\x04\b\x03\x10\x042r\n" +
	"\fSynchronizer\x12b\n" +
	"\vSynchronize\x12&.openmatch.internal.SynchronizeRequest\x1a'.openmatch.internal.SynchronizeResponse(\x010\x01B(Z&open-match.dev/open-match/internal/ipbb\x06proto3"

var (
	file_internal_api_synchronizer_proto_rawDescOnce sync.Once
	file_internal_api_synchronizer_proto_rawDescData []byte
)

func file_internal_api_synchronizer_proto_rawDescGZIP() []byte {
	file_internal_api_synchronizer_proto_rawDescOnce.Do(func() {
		file_internal_api_synchronizer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_api_synchronizer_proto_rawDesc), len(file_internal_api_synchronizer_proto_rawDesc)))
	})
	return file_internal_api_synchronizer_proto_rawDescData
}

var file_internal_api_synchronizer_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_api_synchronizer_proto_goTypes = []any{
	(*SynchronizeRequest)(nil),  // 0: openmatch.internal.SynchronizeRequest
	(*SynchronizeResponse)(nil), // 1: openmatch.internal.SynchronizeResponse
	(*pb.Match)(nil),            // 2: openmatch.Match
}
var file_internal_api_synchronizer_proto_depIdxs = []int32{
	2, // 0: openmatch.internal.SynchronizeRequest.proposal:type_name -> openmatch.Match
	0, // 1: openmatch.internal.Synchronizer.Synchronize:input_type -> openmatch.internal.SynchronizeRequest
	1, // 2: openmatch.internal.Synchronizer.Synchronize:output_type -> openmatch.internal.SynchronizeResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_internal_api_synchronizer_proto_init() }
func file_internal_api_synchronizer_proto_init() {
	if File_internal_api_synchronizer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_api_synchronizer_proto_rawDesc), len(file_internal_api_synchronizer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_api_synchronizer_proto_goTypes,
		DependencyIndexes: file_internal_api_synchronizer_proto_depIdxs,
		MessageInfos:      file_internal_api_synchronizer_proto_msgTypes,
	}.Build()
	File_internal_api_synchronizer_proto = out.File
	file_internal_api_synchronizer_proto_goTypes = nil
	file_internal_api_synchronizer_proto_depIdxs = nil
}
