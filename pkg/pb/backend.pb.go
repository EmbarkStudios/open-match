// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v4.24.0
// source: api/backend.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FunctionConfig_Type int32

const (
	FunctionConfig_GRPC FunctionConfig_Type = 0
	FunctionConfig_REST FunctionConfig_Type = 1
)

// Enum value maps for FunctionConfig_Type.
var (
	FunctionConfig_Type_name = map[int32]string{
		0: "GRPC",
		1: "REST",
	}
	FunctionConfig_Type_value = map[string]int32{
		"GRPC": 0,
		"REST": 1,
	}
)

func (x FunctionConfig_Type) Enum() *FunctionConfig_Type {
	p := new(FunctionConfig_Type)
	*p = x
	return p
}

func (x FunctionConfig_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionConfig_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_backend_proto_enumTypes[0].Descriptor()
}

func (FunctionConfig_Type) Type() protoreflect.EnumType {
	return &file_api_backend_proto_enumTypes[0]
}

func (x FunctionConfig_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionConfig_Type.Descriptor instead.
func (FunctionConfig_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{0, 0}
}

type AssignmentFailure_Cause int32

const (
	AssignmentFailure_UNKNOWN          AssignmentFailure_Cause = 0
	AssignmentFailure_TICKET_NOT_FOUND AssignmentFailure_Cause = 1
)

// Enum value maps for AssignmentFailure_Cause.
var (
	AssignmentFailure_Cause_name = map[int32]string{
		0: "UNKNOWN",
		1: "TICKET_NOT_FOUND",
	}
	AssignmentFailure_Cause_value = map[string]int32{
		"UNKNOWN":          0,
		"TICKET_NOT_FOUND": 1,
	}
)

func (x AssignmentFailure_Cause) Enum() *AssignmentFailure_Cause {
	p := new(AssignmentFailure_Cause)
	*p = x
	return p
}

func (x AssignmentFailure_Cause) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignmentFailure_Cause) Descriptor() protoreflect.EnumDescriptor {
	return file_api_backend_proto_enumTypes[1].Descriptor()
}

func (AssignmentFailure_Cause) Type() protoreflect.EnumType {
	return &file_api_backend_proto_enumTypes[1]
}

func (x AssignmentFailure_Cause) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignmentFailure_Cause.Descriptor instead.
func (AssignmentFailure_Cause) EnumDescriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{8, 0}
}

// FunctionConfig specifies a MMF address and client type for Backend to establish connections with the MMF
type FunctionConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Type          FunctionConfig_Type    `protobuf:"varint,3,opt,name=type,proto3,enum=openmatch.FunctionConfig_Type" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionConfig) Reset() {
	*x = FunctionConfig{}
	mi := &file_api_backend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionConfig) ProtoMessage() {}

func (x *FunctionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionConfig.ProtoReflect.Descriptor instead.
func (*FunctionConfig) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{0}
}

func (x *FunctionConfig) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *FunctionConfig) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *FunctionConfig) GetType() FunctionConfig_Type {
	if x != nil {
		return x.Type
	}
	return FunctionConfig_GRPC
}

type FetchMatchesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A configuration for the MatchFunction server of this FetchMatches call.
	Config *FunctionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// A MatchProfile that will be sent to the MatchFunction server of this FetchMatches call.
	Profile       *MatchProfile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchMatchesRequest) Reset() {
	*x = FetchMatchesRequest{}
	mi := &file_api_backend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMatchesRequest) ProtoMessage() {}

func (x *FetchMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMatchesRequest.ProtoReflect.Descriptor instead.
func (*FetchMatchesRequest) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{1}
}

func (x *FetchMatchesRequest) GetConfig() *FunctionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *FetchMatchesRequest) GetProfile() *MatchProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type FetchMatchesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Match generated by the user-defined MMF with the specified MatchProfiles.
	// A valid Match response will contain at least one ticket.
	Match         *Match `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchMatchesResponse) Reset() {
	*x = FetchMatchesResponse{}
	mi := &file_api_backend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchMatchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchMatchesResponse) ProtoMessage() {}

func (x *FetchMatchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchMatchesResponse.ProtoReflect.Descriptor instead.
func (*FetchMatchesResponse) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{2}
}

func (x *FetchMatchesResponse) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

type ReleaseTicketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TicketIds is a list of string representing Open Match generated Ids to be re-enabled for MMF querying
	// because they are no longer awaiting assignment from a previous match result
	TicketIds     []string `protobuf:"bytes,1,rep,name=ticket_ids,json=ticketIds,proto3" json:"ticket_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseTicketsRequest) Reset() {
	*x = ReleaseTicketsRequest{}
	mi := &file_api_backend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTicketsRequest) ProtoMessage() {}

func (x *ReleaseTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTicketsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{3}
}

func (x *ReleaseTicketsRequest) GetTicketIds() []string {
	if x != nil {
		return x.TicketIds
	}
	return nil
}

type ReleaseTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseTicketsResponse) Reset() {
	*x = ReleaseTicketsResponse{}
	mi := &file_api_backend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTicketsResponse) ProtoMessage() {}

func (x *ReleaseTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTicketsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{4}
}

type ReleaseAllTicketsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseAllTicketsRequest) Reset() {
	*x = ReleaseAllTicketsRequest{}
	mi := &file_api_backend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAllTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAllTicketsRequest) ProtoMessage() {}

func (x *ReleaseAllTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAllTicketsRequest.ProtoReflect.Descriptor instead.
func (*ReleaseAllTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{5}
}

type ReleaseAllTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseAllTicketsResponse) Reset() {
	*x = ReleaseAllTicketsResponse{}
	mi := &file_api_backend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAllTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAllTicketsResponse) ProtoMessage() {}

func (x *ReleaseAllTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAllTicketsResponse.ProtoReflect.Descriptor instead.
func (*ReleaseAllTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{6}
}

// AssignmentGroup contains an Assignment and the Tickets to which it should be applied.
type AssignmentGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TicketIds is a list of strings representing Open Match generated Ids which apply to an Assignment.
	TicketIds []string `protobuf:"bytes,1,rep,name=ticket_ids,json=ticketIds,proto3" json:"ticket_ids,omitempty"`
	// An Assignment specifies game connection related information to be associated with the TicketIds.
	Assignment    *Assignment `protobuf:"bytes,2,opt,name=assignment,proto3" json:"assignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignmentGroup) Reset() {
	*x = AssignmentGroup{}
	mi := &file_api_backend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentGroup) ProtoMessage() {}

func (x *AssignmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentGroup.ProtoReflect.Descriptor instead.
func (*AssignmentGroup) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{7}
}

func (x *AssignmentGroup) GetTicketIds() []string {
	if x != nil {
		return x.TicketIds
	}
	return nil
}

func (x *AssignmentGroup) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// AssignmentFailure contains the id of the Ticket that failed the Assignment and the failure status.
type AssignmentFailure struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	TicketId      string                  `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	Cause         AssignmentFailure_Cause `protobuf:"varint,2,opt,name=cause,proto3,enum=openmatch.AssignmentFailure_Cause" json:"cause,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignmentFailure) Reset() {
	*x = AssignmentFailure{}
	mi := &file_api_backend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignmentFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentFailure) ProtoMessage() {}

func (x *AssignmentFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentFailure.ProtoReflect.Descriptor instead.
func (*AssignmentFailure) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{8}
}

func (x *AssignmentFailure) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *AssignmentFailure) GetCause() AssignmentFailure_Cause {
	if x != nil {
		return x.Cause
	}
	return AssignmentFailure_UNKNOWN
}

type AssignTicketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Assignments is a list of assignment groups that contain assignment and the Tickets to which they should be applied.
	Assignments   []*AssignmentGroup `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketsRequest) Reset() {
	*x = AssignTicketsRequest{}
	mi := &file_api_backend_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketsRequest) ProtoMessage() {}

func (x *AssignTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketsRequest.ProtoReflect.Descriptor instead.
func (*AssignTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{9}
}

func (x *AssignTicketsRequest) GetAssignments() []*AssignmentGroup {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type AssignTicketsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Failures is a list of all the Tickets that failed assignment along with the cause of failure.
	Failures      []*AssignmentFailure `protobuf:"bytes,1,rep,name=failures,proto3" json:"failures,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AssignTicketsResponse) Reset() {
	*x = AssignTicketsResponse{}
	mi := &file_api_backend_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignTicketsResponse) ProtoMessage() {}

func (x *AssignTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_backend_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignTicketsResponse.ProtoReflect.Descriptor instead.
func (*AssignTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_backend_proto_rawDescGZIP(), []int{10}
}

func (x *AssignTicketsResponse) GetFailures() []*AssignmentFailure {
	if x != nil {
		return x.Failures
	}
	return nil
}

var File_api_backend_proto protoreflect.FileDescriptor

const file_api_backend_proto_rawDesc = "" +
	"\n" +
	"\x11api/backend.proto\x12\topenmatch\x1a\x12api/messages.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x88\x01\n" +
	"\x0eFunctionConfig\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x122\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1e.openmatch.FunctionConfig.TypeR\x04type\"\x1a\n" +
	"\x04Type\x12\b\n" +
	"\x04GRPC\x10\x00\x12\b\n" +
	"\x04REST\x10\x01\"{\n" +
	"\x13FetchMatchesRequest\x121\n" +
	"\x06config\x18\x01 \x01(\v2\x19.openmatch.FunctionConfigR\x06config\x121\n" +
	"\aprofile\x18\x02 \x01(\v2\x17.openmatch.MatchProfileR\aprofile\">\n" +
	"\x14FetchMatchesResponse\x12&\n" +
	"\x05match\x18\x01 \x01(\v2\x10.openmatch.MatchR\x05match\"6\n" +
	"\x15ReleaseTicketsRequest\x12\x1d\n" +
	"\n" +
	"ticket_ids\x18\x01 \x03(\tR\tticketIds\"\x18\n" +
	"\x16ReleaseTicketsResponse\"\x1a\n" +
	"\x18ReleaseAllTicketsRequest\"\x1b\n" +
	"\x19ReleaseAllTicketsResponse\"g\n" +
	"\x0fAssignmentGroup\x12\x1d\n" +
	"\n" +
	"ticket_ids\x18\x01 \x03(\tR\tticketIds\x125\n" +
	"\n" +
	"assignment\x18\x02 \x01(\v2\x15.openmatch.AssignmentR\n" +
	"assignment\"\x96\x01\n" +
	"\x11AssignmentFailure\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x128\n" +
	"\x05cause\x18\x02 \x01(\x0e2\".openmatch.AssignmentFailure.CauseR\x05cause\"*\n" +
	"\x05Cause\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x14\n" +
	"\x10TICKET_NOT_FOUND\x10\x01\"T\n" +
	"\x14AssignTicketsRequest\x12<\n" +
	"\vassignments\x18\x01 \x03(\v2\x1a.openmatch.AssignmentGroupR\vassignments\"Q\n" +
	"\x15AssignTicketsResponse\x128\n" +
	"\bfailures\x18\x01 \x03(\v2\x1c.openmatch.AssignmentFailureR\bfailures2\xad\x04\n" +
	"\x0eBackendService\x12~\n" +
	"\fFetchMatches\x12\x1e.openmatch.FetchMatchesRequest\x1a\x1f.openmatch.FetchMatchesResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v1/backendservice/matches:fetch0\x01\x12\x80\x01\n" +
	"\rAssignTickets\x12\x1f.openmatch.AssignTicketsRequest\x1a .openmatch.AssignTicketsResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/backendservice/tickets:assign\x12\x84\x01\n" +
	"\x0eReleaseTickets\x12 .openmatch.ReleaseTicketsRequest\x1a!.openmatch.ReleaseTicketsResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/backendservice/tickets:release\x12\x90\x01\n" +
	"\x11ReleaseAllTickets\x12#.openmatch.ReleaseAllTicketsRequest\x1a$.openmatch.ReleaseAllTicketsResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backendservice/tickets:releaseallB\x8a\x03\x92A\xd8\x02\x12\xb1\x01\n" +
	"\aBackend\"I\n" +
	"\n" +
	"Open Match\x12\x16https://open-match.dev\x1a#open-match-discuss@googlegroups.com*V\n" +
	"\x12Apache 2.0 License\x12@https://github.com/googleforgames/open-match/blob/master/LICENSE2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\ar=\n" +
	"\x18Open Match Documentation\x12!https://open-match.dev/site/docs/Z open-match.dev/open-match/pkg/pb\xaa\x02\tOpenMatchb\x06proto3"

var (
	file_api_backend_proto_rawDescOnce sync.Once
	file_api_backend_proto_rawDescData []byte
)

func file_api_backend_proto_rawDescGZIP() []byte {
	file_api_backend_proto_rawDescOnce.Do(func() {
		file_api_backend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_backend_proto_rawDesc), len(file_api_backend_proto_rawDesc)))
	})
	return file_api_backend_proto_rawDescData
}

var file_api_backend_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_backend_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_backend_proto_goTypes = []any{
	(FunctionConfig_Type)(0),          // 0: openmatch.FunctionConfig.Type
	(AssignmentFailure_Cause)(0),      // 1: openmatch.AssignmentFailure.Cause
	(*FunctionConfig)(nil),            // 2: openmatch.FunctionConfig
	(*FetchMatchesRequest)(nil),       // 3: openmatch.FetchMatchesRequest
	(*FetchMatchesResponse)(nil),      // 4: openmatch.FetchMatchesResponse
	(*ReleaseTicketsRequest)(nil),     // 5: openmatch.ReleaseTicketsRequest
	(*ReleaseTicketsResponse)(nil),    // 6: openmatch.ReleaseTicketsResponse
	(*ReleaseAllTicketsRequest)(nil),  // 7: openmatch.ReleaseAllTicketsRequest
	(*ReleaseAllTicketsResponse)(nil), // 8: openmatch.ReleaseAllTicketsResponse
	(*AssignmentGroup)(nil),           // 9: openmatch.AssignmentGroup
	(*AssignmentFailure)(nil),         // 10: openmatch.AssignmentFailure
	(*AssignTicketsRequest)(nil),      // 11: openmatch.AssignTicketsRequest
	(*AssignTicketsResponse)(nil),     // 12: openmatch.AssignTicketsResponse
	(*MatchProfile)(nil),              // 13: openmatch.MatchProfile
	(*Match)(nil),                     // 14: openmatch.Match
	(*Assignment)(nil),                // 15: openmatch.Assignment
}
var file_api_backend_proto_depIdxs = []int32{
	0,  // 0: openmatch.FunctionConfig.type:type_name -> openmatch.FunctionConfig.Type
	2,  // 1: openmatch.FetchMatchesRequest.config:type_name -> openmatch.FunctionConfig
	13, // 2: openmatch.FetchMatchesRequest.profile:type_name -> openmatch.MatchProfile
	14, // 3: openmatch.FetchMatchesResponse.match:type_name -> openmatch.Match
	15, // 4: openmatch.AssignmentGroup.assignment:type_name -> openmatch.Assignment
	1,  // 5: openmatch.AssignmentFailure.cause:type_name -> openmatch.AssignmentFailure.Cause
	9,  // 6: openmatch.AssignTicketsRequest.assignments:type_name -> openmatch.AssignmentGroup
	10, // 7: openmatch.AssignTicketsResponse.failures:type_name -> openmatch.AssignmentFailure
	3,  // 8: openmatch.BackendService.FetchMatches:input_type -> openmatch.FetchMatchesRequest
	11, // 9: openmatch.BackendService.AssignTickets:input_type -> openmatch.AssignTicketsRequest
	5,  // 10: openmatch.BackendService.ReleaseTickets:input_type -> openmatch.ReleaseTicketsRequest
	7,  // 11: openmatch.BackendService.ReleaseAllTickets:input_type -> openmatch.ReleaseAllTicketsRequest
	4,  // 12: openmatch.BackendService.FetchMatches:output_type -> openmatch.FetchMatchesResponse
	12, // 13: openmatch.BackendService.AssignTickets:output_type -> openmatch.AssignTicketsResponse
	6,  // 14: openmatch.BackendService.ReleaseTickets:output_type -> openmatch.ReleaseTicketsResponse
	8,  // 15: openmatch.BackendService.ReleaseAllTickets:output_type -> openmatch.ReleaseAllTicketsResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_api_backend_proto_init() }
func file_api_backend_proto_init() {
	if File_api_backend_proto != nil {
		return
	}
	file_api_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_backend_proto_rawDesc), len(file_api_backend_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_backend_proto_goTypes,
		DependencyIndexes: file_api_backend_proto_depIdxs,
		EnumInfos:         file_api_backend_proto_enumTypes,
		MessageInfos:      file_api_backend_proto_msgTypes,
	}.Build()
	File_api_backend_proto = out.File
	file_api_backend_proto_goTypes = nil
	file_api_backend_proto_depIdxs = nil
}
