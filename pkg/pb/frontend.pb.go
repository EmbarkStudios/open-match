// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.0
// source: api/frontend.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTicketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Ticket object with SearchFields defined.
	Ticket        *Ticket `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketRequest) Reset() {
	*x = CreateTicketRequest{}
	mi := &file_api_frontend_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRequest) ProtoMessage() {}

func (x *CreateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTicketRequest) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type DeleteTicketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A TicketId of a generated Ticket to be deleted.
	TicketId      string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketRequest) Reset() {
	*x = DeleteTicketRequest{}
	mi := &file_api_frontend_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketRequest) ProtoMessage() {}

func (x *DeleteTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketRequest.ProtoReflect.Descriptor instead.
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type GetTicketRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A TicketId of a generated Ticket.
	TicketId      string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTicketRequest) Reset() {
	*x = GetTicketRequest{}
	mi := &file_api_frontend_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketRequest) ProtoMessage() {}

func (x *GetTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketRequest.ProtoReflect.Descriptor instead.
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{2}
}

func (x *GetTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type WatchAssignmentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A TicketId of a generated Ticket to get updates on.
	TicketId      string `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAssignmentsRequest) Reset() {
	*x = WatchAssignmentsRequest{}
	mi := &file_api_frontend_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAssignmentsRequest) ProtoMessage() {}

func (x *WatchAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*WatchAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{3}
}

func (x *WatchAssignmentsRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

type WatchAssignmentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An updated Assignment of the requested Ticket.
	Assignment    *Assignment `protobuf:"bytes,1,opt,name=assignment,proto3" json:"assignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchAssignmentsResponse) Reset() {
	*x = WatchAssignmentsResponse{}
	mi := &file_api_frontend_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAssignmentsResponse) ProtoMessage() {}

func (x *WatchAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*WatchAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{4}
}

func (x *WatchAssignmentsResponse) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type AcknowledgeBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An existing ID of Backfill to acknowledge.
	BackfillId string `protobuf:"bytes,1,opt,name=backfill_id,json=backfillId,proto3" json:"backfill_id,omitempty"`
	// An updated Assignment of the requested Backfill.
	Assignment    *Assignment `protobuf:"bytes,2,opt,name=assignment,proto3" json:"assignment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeBackfillRequest) Reset() {
	*x = AcknowledgeBackfillRequest{}
	mi := &file_api_frontend_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeBackfillRequest) ProtoMessage() {}

func (x *AcknowledgeBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeBackfillRequest.ProtoReflect.Descriptor instead.
func (*AcknowledgeBackfillRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{5}
}

func (x *AcknowledgeBackfillRequest) GetBackfillId() string {
	if x != nil {
		return x.BackfillId
	}
	return ""
}

func (x *AcknowledgeBackfillRequest) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type AcknowledgeBackfillResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Backfill that was acknowledged.
	Backfill *Backfill `protobuf:"bytes,1,opt,name=backfill,proto3" json:"backfill,omitempty"`
	// All of the Tickets that were successfully assigned
	Tickets       []*Ticket `protobuf:"bytes,2,rep,name=tickets,proto3" json:"tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcknowledgeBackfillResponse) Reset() {
	*x = AcknowledgeBackfillResponse{}
	mi := &file_api_frontend_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcknowledgeBackfillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcknowledgeBackfillResponse) ProtoMessage() {}

func (x *AcknowledgeBackfillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcknowledgeBackfillResponse.ProtoReflect.Descriptor instead.
func (*AcknowledgeBackfillResponse) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{6}
}

func (x *AcknowledgeBackfillResponse) GetBackfill() *Backfill {
	if x != nil {
		return x.Backfill
	}
	return nil
}

func (x *AcknowledgeBackfillResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type CreateBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An empty Backfill object.
	Backfill      *Backfill `protobuf:"bytes,1,opt,name=backfill,proto3" json:"backfill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBackfillRequest) Reset() {
	*x = CreateBackfillRequest{}
	mi := &file_api_frontend_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBackfillRequest) ProtoMessage() {}

func (x *CreateBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBackfillRequest.ProtoReflect.Descriptor instead.
func (*CreateBackfillRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{7}
}

func (x *CreateBackfillRequest) GetBackfill() *Backfill {
	if x != nil {
		return x.Backfill
	}
	return nil
}

// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type DeleteBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An existing ID of Backfill to delete.
	BackfillId    string `protobuf:"bytes,1,opt,name=backfill_id,json=backfillId,proto3" json:"backfill_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBackfillRequest) Reset() {
	*x = DeleteBackfillRequest{}
	mi := &file_api_frontend_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBackfillRequest) ProtoMessage() {}

func (x *DeleteBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBackfillRequest.ProtoReflect.Descriptor instead.
func (*DeleteBackfillRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteBackfillRequest) GetBackfillId() string {
	if x != nil {
		return x.BackfillId
	}
	return ""
}

// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type GetBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An existing ID of Backfill to retrieve.
	BackfillId    string `protobuf:"bytes,1,opt,name=backfill_id,json=backfillId,proto3" json:"backfill_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBackfillRequest) Reset() {
	*x = GetBackfillRequest{}
	mi := &file_api_frontend_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackfillRequest) ProtoMessage() {}

func (x *GetBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackfillRequest.ProtoReflect.Descriptor instead.
func (*GetBackfillRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{9}
}

func (x *GetBackfillRequest) GetBackfillId() string {
	if x != nil {
		return x.BackfillId
	}
	return ""
}

// UpdateBackfillRequest - update searchFields, extensions and set assignment.
//
// BETA FEATURE WARNING: This Request message is not finalized and still subject
// to possible change or removal.
type UpdateBackfillRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Backfill object with ID set and fields to update.
	Backfill      *Backfill `protobuf:"bytes,1,opt,name=backfill,proto3" json:"backfill,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateBackfillRequest) Reset() {
	*x = UpdateBackfillRequest{}
	mi := &file_api_frontend_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBackfillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBackfillRequest) ProtoMessage() {}

func (x *UpdateBackfillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_frontend_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBackfillRequest.ProtoReflect.Descriptor instead.
func (*UpdateBackfillRequest) Descriptor() ([]byte, []int) {
	return file_api_frontend_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateBackfillRequest) GetBackfill() *Backfill {
	if x != nil {
		return x.Backfill
	}
	return nil
}

var File_api_frontend_proto protoreflect.FileDescriptor

const file_api_frontend_proto_rawDesc = "" +
	"\n" +
	"\x12api/frontend.proto\x12\topenmatch\x1a\x12api/messages.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"@\n" +
	"\x13CreateTicketRequest\x12)\n" +
	"\x06ticket\x18\x01 \x01(\v2\x11.openmatch.TicketR\x06ticket\"2\n" +
	"\x13DeleteTicketRequest\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"/\n" +
	"\x10GetTicketRequest\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"6\n" +
	"\x17WatchAssignmentsRequest\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\"Q\n" +
	"\x18WatchAssignmentsResponse\x125\n" +
	"\n" +
	"assignment\x18\x01 \x01(\v2\x15.openmatch.AssignmentR\n" +
	"assignment\"t\n" +
	"\x1aAcknowledgeBackfillRequest\x12\x1f\n" +
	"\vbackfill_id\x18\x01 \x01(\tR\n" +
	"backfillId\x125\n" +
	"\n" +
	"assignment\x18\x02 \x01(\v2\x15.openmatch.AssignmentR\n" +
	"assignment\"{\n" +
	"\x1bAcknowledgeBackfillResponse\x12/\n" +
	"\bbackfill\x18\x01 \x01(\v2\x13.openmatch.BackfillR\bbackfill\x12+\n" +
	"\atickets\x18\x02 \x03(\v2\x11.openmatch.TicketR\atickets\"H\n" +
	"\x15CreateBackfillRequest\x12/\n" +
	"\bbackfill\x18\x01 \x01(\v2\x13.openmatch.BackfillR\bbackfill\"8\n" +
	"\x15DeleteBackfillRequest\x12\x1f\n" +
	"\vbackfill_id\x18\x01 \x01(\tR\n" +
	"backfillId\"5\n" +
	"\x12GetBackfillRequest\x12\x1f\n" +
	"\vbackfill_id\x18\x01 \x01(\tR\n" +
	"backfillId\"H\n" +
	"\x15UpdateBackfillRequest\x12/\n" +
	"\bbackfill\x18\x01 \x01(\v2\x13.openmatch.BackfillR\bbackfill2\x8a\t\n" +
	"\x0fFrontendService\x12i\n" +
	"\fCreateTicket\x12\x1e.openmatch.CreateTicketRequest\x1a\x11.openmatch.Ticket\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/v1/frontendservice/tickets\x12w\n" +
	"\fDeleteTicket\x12\x1e.openmatch.DeleteTicketRequest\x1a\x16.google.protobuf.Empty\"/\x82\xd3\xe4\x93\x02)*'/v1/frontendservice/tickets/{ticket_id}\x12l\n" +
	"\tGetTicket\x12\x1b.openmatch.GetTicketRequest\x1a\x11.openmatch.Ticket\"/\x82\xd3\xe4\x93\x02)\x12'/v1/frontendservice/tickets/{ticket_id}\x12\x9a\x01\n" +
	"\x10WatchAssignments\x12\".openmatch.WatchAssignmentsRequest\x1a#.openmatch.WatchAssignmentsResponse\";\x82\xd3\xe4\x93\x025\x123/v1/frontendservice/tickets/{ticket_id}/assignments0\x01\x12\xa8\x01\n" +
	"\x13AcknowledgeBackfill\x12%.openmatch.AcknowledgeBackfillRequest\x1a&.openmatch.AcknowledgeBackfillResponse\"B\x82\xd3\xe4\x93\x02<:\x01*\"7/v1/frontendservice/backfills/{backfill_id}/acknowledge\x12q\n" +
	"\x0eCreateBackfill\x12 .openmatch.CreateBackfillRequest\x1a\x13.openmatch.Backfill\"(\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/frontendservice/backfills\x12\x7f\n" +
	"\x0eDeleteBackfill\x12 .openmatch.DeleteBackfillRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-*+/v1/frontendservice/backfills/{backfill_id}\x12v\n" +
	"\vGetBackfill\x12\x1d.openmatch.GetBackfillRequest\x1a\x13.openmatch.Backfill\"3\x82\xd3\xe4\x93\x02-\x12+/v1/frontendservice/backfills/{backfill_id}\x12q\n" +
	"\x0eUpdateBackfill\x12 .openmatch.UpdateBackfillRequest\x1a\x13.openmatch.Backfill\"(\x82\xd3\xe4\x93\x02\":\x01*2\x1d/v1/frontendservice/backfillsB\x8b\x03\x92A\xd9\x02\x12\xb2\x01\n" +
	"\bFrontend\"I\n" +
	"\n" +
	"Open Match\x12\x16https://open-match.dev\x1a#open-match-discuss@googlegroups.com*V\n" +
	"\x12Apache 2.0 License\x12@https://github.com/googleforgames/open-match/blob/master/LICENSE2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\ar=\n" +
	"\x18Open Match Documentation\x12!https://open-match.dev/site/docs/Z open-match.dev/open-match/pkg/pb\xaa\x02\tOpenMatchb\x06proto3"

var (
	file_api_frontend_proto_rawDescOnce sync.Once
	file_api_frontend_proto_rawDescData []byte
)

func file_api_frontend_proto_rawDescGZIP() []byte {
	file_api_frontend_proto_rawDescOnce.Do(func() {
		file_api_frontend_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_frontend_proto_rawDesc), len(file_api_frontend_proto_rawDesc)))
	})
	return file_api_frontend_proto_rawDescData
}

var file_api_frontend_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_frontend_proto_goTypes = []any{
	(*CreateTicketRequest)(nil),         // 0: openmatch.CreateTicketRequest
	(*DeleteTicketRequest)(nil),         // 1: openmatch.DeleteTicketRequest
	(*GetTicketRequest)(nil),            // 2: openmatch.GetTicketRequest
	(*WatchAssignmentsRequest)(nil),     // 3: openmatch.WatchAssignmentsRequest
	(*WatchAssignmentsResponse)(nil),    // 4: openmatch.WatchAssignmentsResponse
	(*AcknowledgeBackfillRequest)(nil),  // 5: openmatch.AcknowledgeBackfillRequest
	(*AcknowledgeBackfillResponse)(nil), // 6: openmatch.AcknowledgeBackfillResponse
	(*CreateBackfillRequest)(nil),       // 7: openmatch.CreateBackfillRequest
	(*DeleteBackfillRequest)(nil),       // 8: openmatch.DeleteBackfillRequest
	(*GetBackfillRequest)(nil),          // 9: openmatch.GetBackfillRequest
	(*UpdateBackfillRequest)(nil),       // 10: openmatch.UpdateBackfillRequest
	(*Ticket)(nil),                      // 11: openmatch.Ticket
	(*Assignment)(nil),                  // 12: openmatch.Assignment
	(*Backfill)(nil),                    // 13: openmatch.Backfill
	(*emptypb.Empty)(nil),               // 14: google.protobuf.Empty
}
var file_api_frontend_proto_depIdxs = []int32{
	11, // 0: openmatch.CreateTicketRequest.ticket:type_name -> openmatch.Ticket
	12, // 1: openmatch.WatchAssignmentsResponse.assignment:type_name -> openmatch.Assignment
	12, // 2: openmatch.AcknowledgeBackfillRequest.assignment:type_name -> openmatch.Assignment
	13, // 3: openmatch.AcknowledgeBackfillResponse.backfill:type_name -> openmatch.Backfill
	11, // 4: openmatch.AcknowledgeBackfillResponse.tickets:type_name -> openmatch.Ticket
	13, // 5: openmatch.CreateBackfillRequest.backfill:type_name -> openmatch.Backfill
	13, // 6: openmatch.UpdateBackfillRequest.backfill:type_name -> openmatch.Backfill
	0,  // 7: openmatch.FrontendService.CreateTicket:input_type -> openmatch.CreateTicketRequest
	1,  // 8: openmatch.FrontendService.DeleteTicket:input_type -> openmatch.DeleteTicketRequest
	2,  // 9: openmatch.FrontendService.GetTicket:input_type -> openmatch.GetTicketRequest
	3,  // 10: openmatch.FrontendService.WatchAssignments:input_type -> openmatch.WatchAssignmentsRequest
	5,  // 11: openmatch.FrontendService.AcknowledgeBackfill:input_type -> openmatch.AcknowledgeBackfillRequest
	7,  // 12: openmatch.FrontendService.CreateBackfill:input_type -> openmatch.CreateBackfillRequest
	8,  // 13: openmatch.FrontendService.DeleteBackfill:input_type -> openmatch.DeleteBackfillRequest
	9,  // 14: openmatch.FrontendService.GetBackfill:input_type -> openmatch.GetBackfillRequest
	10, // 15: openmatch.FrontendService.UpdateBackfill:input_type -> openmatch.UpdateBackfillRequest
	11, // 16: openmatch.FrontendService.CreateTicket:output_type -> openmatch.Ticket
	14, // 17: openmatch.FrontendService.DeleteTicket:output_type -> google.protobuf.Empty
	11, // 18: openmatch.FrontendService.GetTicket:output_type -> openmatch.Ticket
	4,  // 19: openmatch.FrontendService.WatchAssignments:output_type -> openmatch.WatchAssignmentsResponse
	6,  // 20: openmatch.FrontendService.AcknowledgeBackfill:output_type -> openmatch.AcknowledgeBackfillResponse
	13, // 21: openmatch.FrontendService.CreateBackfill:output_type -> openmatch.Backfill
	14, // 22: openmatch.FrontendService.DeleteBackfill:output_type -> google.protobuf.Empty
	13, // 23: openmatch.FrontendService.GetBackfill:output_type -> openmatch.Backfill
	13, // 24: openmatch.FrontendService.UpdateBackfill:output_type -> openmatch.Backfill
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_frontend_proto_init() }
func file_api_frontend_proto_init() {
	if File_api_frontend_proto != nil {
		return
	}
	file_api_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_frontend_proto_rawDesc), len(file_api_frontend_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_frontend_proto_goTypes,
		DependencyIndexes: file_api_frontend_proto_depIdxs,
		MessageInfos:      file_api_frontend_proto_msgTypes,
	}.Build()
	File_api_frontend_proto = out.File
	file_api_frontend_proto_goTypes = nil
	file_api_frontend_proto_depIdxs = nil
}
