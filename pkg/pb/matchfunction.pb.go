// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.0
// source: api/matchfunction.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RunRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A MatchProfile defines constraints of Tickets in a Match and shapes the Match proposed by the MatchFunction.
	Profile       *MatchProfile `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	mi := &file_api_matchfunction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_matchfunction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_api_matchfunction_proto_rawDescGZIP(), []int{0}
}

func (x *RunRequest) GetProfile() *MatchProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type RunResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A Proposal represents a Match candidate that satifies the constraints defined in the input Profile.
	// A valid Proposal response will contain at least one ticket.
	Proposal      *Match `protobuf:"bytes,1,opt,name=proposal,proto3" json:"proposal,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunResponse) Reset() {
	*x = RunResponse{}
	mi := &file_api_matchfunction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunResponse) ProtoMessage() {}

func (x *RunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_matchfunction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunResponse.ProtoReflect.Descriptor instead.
func (*RunResponse) Descriptor() ([]byte, []int) {
	return file_api_matchfunction_proto_rawDescGZIP(), []int{1}
}

func (x *RunResponse) GetProposal() *Match {
	if x != nil {
		return x.Proposal
	}
	return nil
}

var File_api_matchfunction_proto protoreflect.FileDescriptor

const file_api_matchfunction_proto_rawDesc = "" +
	"\n" +
	"\x17api/matchfunction.proto\x12\topenmatch\x1a\x12api/messages.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"?\n" +
	"\n" +
	"RunRequest\x121\n" +
	"\aprofile\x18\x01 \x01(\v2\x17.openmatch.MatchProfileR\aprofile\";\n" +
	"\vRunResponse\x12,\n" +
	"\bproposal\x18\x01 \x01(\v2\x10.openmatch.MatchR\bproposal2i\n" +
	"\rMatchFunction\x12X\n" +
	"\x03Run\x12\x15.openmatch.RunRequest\x1a\x16.openmatch.RunResponse\" \x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/matchfunction:run0\x01B\x91\x03\x92A\xdf\x02\x12\xb8\x01\n" +
	"\x0eMatch Function\"I\n" +
	"\n" +
	"Open Match\x12\x16https://open-match.dev\x1a#open-match-discuss@googlegroups.com*V\n" +
	"\x12Apache 2.0 License\x12@https://github.com/googleforgames/open-match/blob/master/LICENSE2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\ar=\n" +
	"\x18Open Match Documentation\x12!https://open-match.dev/site/docs/Z open-match.dev/open-match/pkg/pb\xaa\x02\tOpenMatchb\x06proto3"

var (
	file_api_matchfunction_proto_rawDescOnce sync.Once
	file_api_matchfunction_proto_rawDescData []byte
)

func file_api_matchfunction_proto_rawDescGZIP() []byte {
	file_api_matchfunction_proto_rawDescOnce.Do(func() {
		file_api_matchfunction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_matchfunction_proto_rawDesc), len(file_api_matchfunction_proto_rawDesc)))
	})
	return file_api_matchfunction_proto_rawDescData
}

var file_api_matchfunction_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_api_matchfunction_proto_goTypes = []any{
	(*RunRequest)(nil),   // 0: openmatch.RunRequest
	(*RunResponse)(nil),  // 1: openmatch.RunResponse
	(*MatchProfile)(nil), // 2: openmatch.MatchProfile
	(*Match)(nil),        // 3: openmatch.Match
}
var file_api_matchfunction_proto_depIdxs = []int32{
	2, // 0: openmatch.RunRequest.profile:type_name -> openmatch.MatchProfile
	3, // 1: openmatch.RunResponse.proposal:type_name -> openmatch.Match
	0, // 2: openmatch.MatchFunction.Run:input_type -> openmatch.RunRequest
	1, // 3: openmatch.MatchFunction.Run:output_type -> openmatch.RunResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_matchfunction_proto_init() }
func file_api_matchfunction_proto_init() {
	if File_api_matchfunction_proto != nil {
		return
	}
	file_api_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_matchfunction_proto_rawDesc), len(file_api_matchfunction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_matchfunction_proto_goTypes,
		DependencyIndexes: file_api_matchfunction_proto_depIdxs,
		MessageInfos:      file_api_matchfunction_proto_msgTypes,
	}.Build()
	File_api_matchfunction_proto = out.File
	file_api_matchfunction_proto_goTypes = nil
	file_api_matchfunction_proto_depIdxs = nil
}
