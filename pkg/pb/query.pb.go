// Copyright 2019 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.24.0
// source: api/query.proto

package pb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryTicketsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Pool representing the set of Filters to be queried.
	Pool          *Pool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTicketsRequest) Reset() {
	*x = QueryTicketsRequest{}
	mi := &file_api_query_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketsRequest) ProtoMessage() {}

func (x *QueryTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketsRequest.ProtoReflect.Descriptor instead.
func (*QueryTicketsRequest) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTicketsRequest) GetPool() *Pool {
	if x != nil {
		return x.Pool
	}
	return nil
}

type QueryTicketsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tickets that meet all the filtering criteria requested by the pool.
	Tickets       []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTicketsResponse) Reset() {
	*x = QueryTicketsResponse{}
	mi := &file_api_query_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketsResponse) ProtoMessage() {}

func (x *QueryTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketsResponse.ProtoReflect.Descriptor instead.
func (*QueryTicketsResponse) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTicketsResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type QueryTicketIdsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Pool representing the set of Filters to be queried.
	Pool          *Pool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTicketIdsRequest) Reset() {
	*x = QueryTicketIdsRequest{}
	mi := &file_api_query_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketIdsRequest) ProtoMessage() {}

func (x *QueryTicketIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketIdsRequest.ProtoReflect.Descriptor instead.
func (*QueryTicketIdsRequest) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryTicketIdsRequest) GetPool() *Pool {
	if x != nil {
		return x.Pool
	}
	return nil
}

type QueryTicketIdsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TicketIDs that meet all the filtering criteria requested by the pool.
	Ids           []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTicketIdsResponse) Reset() {
	*x = QueryTicketIdsResponse{}
	mi := &file_api_query_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTicketIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTicketIdsResponse) ProtoMessage() {}

func (x *QueryTicketIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTicketIdsResponse.ProtoReflect.Descriptor instead.
func (*QueryTicketIdsResponse) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryTicketIdsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// BETA FEATURE WARNING:  This Request messages are not finalized and
// still subject to possible change or removal.
type QueryBackfillsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The Pool representing the set of Filters to be queried.
	Pool          *Pool `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBackfillsRequest) Reset() {
	*x = QueryBackfillsRequest{}
	mi := &file_api_query_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBackfillsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBackfillsRequest) ProtoMessage() {}

func (x *QueryBackfillsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBackfillsRequest.ProtoReflect.Descriptor instead.
func (*QueryBackfillsRequest) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryBackfillsRequest) GetPool() *Pool {
	if x != nil {
		return x.Pool
	}
	return nil
}

// BETA FEATURE WARNING:  This Request messages are not finalized and
// still subject to possible change or removal.
type QueryBackfillsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Backfills that meet all the filtering criteria requested by the pool.
	Backfills     []*Backfill `protobuf:"bytes,1,rep,name=backfills,proto3" json:"backfills,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryBackfillsResponse) Reset() {
	*x = QueryBackfillsResponse{}
	mi := &file_api_query_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryBackfillsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBackfillsResponse) ProtoMessage() {}

func (x *QueryBackfillsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_query_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBackfillsResponse.ProtoReflect.Descriptor instead.
func (*QueryBackfillsResponse) Descriptor() ([]byte, []int) {
	return file_api_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryBackfillsResponse) GetBackfills() []*Backfill {
	if x != nil {
		return x.Backfills
	}
	return nil
}

var File_api_query_proto protoreflect.FileDescriptor

const file_api_query_proto_rawDesc = "" +
	"\n" +
	"\x0fapi/query.proto\x12\topenmatch\x1a\x12api/messages.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\":\n" +
	"\x13QueryTicketsRequest\x12#\n" +
	"\x04pool\x18\x01 \x01(\v2\x0f.openmatch.PoolR\x04pool\"C\n" +
	"\x14QueryTicketsResponse\x12+\n" +
	"\atickets\x18\x01 \x03(\v2\x11.openmatch.TicketR\atickets\"<\n" +
	"\x15QueryTicketIdsRequest\x12#\n" +
	"\x04pool\x18\x01 \x01(\v2\x0f.openmatch.PoolR\x04pool\"*\n" +
	"\x16QueryTicketIdsResponse\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"<\n" +
	"\x15QueryBackfillsRequest\x12#\n" +
	"\x04pool\x18\x01 \x01(\v2\x0f.openmatch.PoolR\x04pool\"K\n" +
	"\x16QueryBackfillsResponse\x121\n" +
	"\tbackfills\x18\x01 \x03(\v2\x13.openmatch.BackfillR\tbackfills2\x9a\x03\n" +
	"\fQueryService\x12|\n" +
	"\fQueryTickets\x12\x1e.openmatch.QueryTicketsRequest\x1a\x1f.openmatch.QueryTicketsResponse\")\x82\xd3\xe4\x93\x02#:\x01*\"\x1e/v1/queryservice/tickets:query0\x01\x12\x84\x01\n" +
	"\x0eQueryTicketIds\x12 .openmatch.QueryTicketIdsRequest\x1a!.openmatch.QueryTicketIdsResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v1/queryservice/ticketids:query0\x01\x12\x84\x01\n" +
	"\x0eQueryBackfills\x12 .openmatch.QueryBackfillsRequest\x1a!.openmatch.QueryBackfillsResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v1/queryservice/backfills:query0\x01B\x98\x03\x92A\xe6\x02\x12\xbf\x01\n" +
	"\x15MM Logic (Data Layer)\"I\n" +
	"\n" +
	"Open Match\x12\x16https://open-match.dev\x1a#open-match-discuss@googlegroups.com*V\n" +
	"\x12Apache 2.0 License\x12@https://github.com/googleforgames/open-match/blob/master/LICENSE2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonR;\n" +
	"\x03404\x124\n" +
	"*Returned when the resource does not exist.\x12\x06\n" +
	"\x04\x9a\x02\x01\ar=\n" +
	"\x18Open Match Documentation\x12!https://open-match.dev/site/docs/Z open-match.dev/open-match/pkg/pb\xaa\x02\tOpenMatchb\x06proto3"

var (
	file_api_query_proto_rawDescOnce sync.Once
	file_api_query_proto_rawDescData []byte
)

func file_api_query_proto_rawDescGZIP() []byte {
	file_api_query_proto_rawDescOnce.Do(func() {
		file_api_query_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_query_proto_rawDesc), len(file_api_query_proto_rawDesc)))
	})
	return file_api_query_proto_rawDescData
}

var file_api_query_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_query_proto_goTypes = []any{
	(*QueryTicketsRequest)(nil),    // 0: openmatch.QueryTicketsRequest
	(*QueryTicketsResponse)(nil),   // 1: openmatch.QueryTicketsResponse
	(*QueryTicketIdsRequest)(nil),  // 2: openmatch.QueryTicketIdsRequest
	(*QueryTicketIdsResponse)(nil), // 3: openmatch.QueryTicketIdsResponse
	(*QueryBackfillsRequest)(nil),  // 4: openmatch.QueryBackfillsRequest
	(*QueryBackfillsResponse)(nil), // 5: openmatch.QueryBackfillsResponse
	(*Pool)(nil),                   // 6: openmatch.Pool
	(*Ticket)(nil),                 // 7: openmatch.Ticket
	(*Backfill)(nil),               // 8: openmatch.Backfill
}
var file_api_query_proto_depIdxs = []int32{
	6, // 0: openmatch.QueryTicketsRequest.pool:type_name -> openmatch.Pool
	7, // 1: openmatch.QueryTicketsResponse.tickets:type_name -> openmatch.Ticket
	6, // 2: openmatch.QueryTicketIdsRequest.pool:type_name -> openmatch.Pool
	6, // 3: openmatch.QueryBackfillsRequest.pool:type_name -> openmatch.Pool
	8, // 4: openmatch.QueryBackfillsResponse.backfills:type_name -> openmatch.Backfill
	0, // 5: openmatch.QueryService.QueryTickets:input_type -> openmatch.QueryTicketsRequest
	2, // 6: openmatch.QueryService.QueryTicketIds:input_type -> openmatch.QueryTicketIdsRequest
	4, // 7: openmatch.QueryService.QueryBackfills:input_type -> openmatch.QueryBackfillsRequest
	1, // 8: openmatch.QueryService.QueryTickets:output_type -> openmatch.QueryTicketsResponse
	3, // 9: openmatch.QueryService.QueryTicketIds:output_type -> openmatch.QueryTicketIdsResponse
	5, // 10: openmatch.QueryService.QueryBackfills:output_type -> openmatch.QueryBackfillsResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_query_proto_init() }
func file_api_query_proto_init() {
	if File_api_query_proto != nil {
		return
	}
	file_api_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_query_proto_rawDesc), len(file_api_query_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_query_proto_goTypes,
		DependencyIndexes: file_api_query_proto_depIdxs,
		MessageInfos:      file_api_query_proto_msgTypes,
	}.Build()
	File_api_query_proto = out.File
	file_api_query_proto_goTypes = nil
	file_api_query_proto_depIdxs = nil
}
